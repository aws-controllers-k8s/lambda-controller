---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: functions.lambda.services.k8s.aws
spec:
  group: lambda.services.k8s.aws
  names:
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Function is the Schema for the Functions API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function.
            properties:
              architectures:
                items:
                  type: string
                type: array
              code:
                description: |-
                  The code for the Lambda function. You can either specify an object in Amazon
                  S3, upload a .zip file archive deployment package directly, or specify the
                  URI of a container image.
                properties:
                  imageURI:
                    type: string
                  s3Bucket:
                    type: string
                  s3BucketRef:
                    description: Reference field for S3Bucket
                    properties:
                      from:
                        description: |-
                          AWSResourceReference provides all the values necessary to reference another
                          k8s resource for finding the identifier(Id/ARN/Name)
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        type: object
                    type: object
                  s3Key:
                    type: string
                  s3ObjectVersion:
                    type: string
                  sha256:
                    type: string
                  zipFile:
                    format: byte
                    type: string
                type: object
              codeSigningConfigARN:
                type: string
              deadLetterConfig:
                description: |-
                  The dead-letter queue (https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq)
                  for failed asynchronous invocations.
                properties:
                  targetARN:
                    type: string
                type: object
              description:
                type: string
              environment:
                description: |-
                  A function's environment variable settings. You can use environment variables
                  to adjust your function's behavior without updating code. An environment
                  variable is a pair of strings that are stored in a function's version-specific
                  configuration.
                properties:
                  variables:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              ephemeralStorage:
                description: |-
                  The size of the function's /tmp directory in MB. The default value is 512,
                  but can be any whole number between 512 and 10,240 MB. For more information,
                  see Configuring ephemeral storage (console) (https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-ephemeral-storage).
                properties:
                  size:
                    format: int64
                    type: integer
                type: object
              fileSystemConfigs:
                items:
                  description: |-
                    Details about the connection between a Lambda function and an Amazon EFS
                    file system (https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html).
                  properties:
                    arn:
                      type: string
                    localMountPath:
                      type: string
                  type: object
                type: array
              functionEventInvokeConfig:
                properties:
                  destinationConfig:
                    description: |-
                      A configuration object that specifies the destination of an event after Lambda
                      processes it.
                    properties:
                      onFailure:
                        description: A destination for events that failed processing.
                        properties:
                          destination:
                            type: string
                        type: object
                      onSuccess:
                        description: |-
                          A destination for events that were processed successfully.

                          To retain records of successful asynchronous invocations (https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations),
                          you can configure an Amazon SNS topic, Amazon SQS queue, Lambda function,
                          or Amazon EventBridge event bus as the destination.
                        properties:
                          destination:
                            type: string
                        type: object
                    type: object
                  functionName:
                    type: string
                  maximumEventAgeInSeconds:
                    format: int64
                    type: integer
                  maximumRetryAttempts:
                    format: int64
                    type: integer
                  qualifier:
                    type: string
                type: object
              handler:
                type: string
              imageConfig:
                description: |-
                  Configuration values that override the container image Dockerfile settings.
                  For more information, see Container image settings (https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms).
                properties:
                  command:
                    items:
                      type: string
                    type: array
                  entryPoint:
                    items:
                      type: string
                    type: array
                  workingDirectory:
                    type: string
                type: object
              kmsKeyARN:
                type: string
              kmsKeyRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              layers:
                items:
                  type: string
                type: array
              memorySize:
                format: int64
                type: integer
              name:
                type: string
              packageType:
                type: string
              publish:
                type: boolean
              reservedConcurrentExecutions:
                format: int64
                type: integer
              role:
                type: string
              roleRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              runtime:
                type: string
              snapStart:
                description: |-
                  The function's Lambda SnapStart (https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html)
                  setting. Set ApplyOn to PublishedVersions to create a snapshot of the initialized
                  execution environment when you publish a function version.
                properties:
                  applyOn:
                    type: string
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              timeout:
                format: int64
                type: integer
              tracingConfig:
                description: |-
                  The function's X-Ray (https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html)
                  tracing configuration. To sample and record incoming requests, set Mode to
                  Active.
                properties:
                  mode:
                    type: string
                type: object
              vpcConfig:
                description: |-
                  The VPC security groups and subnets that are attached to a Lambda function.
                  For more information, see Configuring a Lambda function to access resources
                  in a VPC (https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).
                properties:
                  securityGroupIDs:
                    items:
                      type: string
                    type: array
                  securityGroupRefs:
                    description: Reference field for SecurityGroupIDs
                    items:
                      description: "AWSResourceReferenceWrapper provides a wrapper
                        around *AWSResourceReference\ntype to provide more user friendly
                        syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                        \ name: my-api"
                      properties:
                        from:
                          description: |-
                            AWSResourceReference provides all the values necessary to reference another
                            k8s resource for finding the identifier(Id/ARN/Name)
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                      type: object
                    type: array
                  subnetIDs:
                    items:
                      type: string
                    type: array
                  subnetRefs:
                    description: Reference field for SubnetIDs
                    items:
                      description: "AWSResourceReferenceWrapper provides a wrapper
                        around *AWSResourceReference\ntype to provide more user friendly
                        syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                        \ name: my-api"
                      properties:
                        from:
                          description: |-
                            AWSResourceReference provides all the values necessary to reference another
                            k8s resource for finding the identifier(Id/ARN/Name)
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
            required:
            - code
            - name
            type: object
          status:
            description: FunctionStatus defines the observed state of Function
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              codeSHA256:
                description: The SHA256 hash of the function's deployment package.
                type: string
              codeSize:
                description: The size of the function's deployment package, in bytes.
                format: int64
                type: integer
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              imageConfigResponse:
                description: The function's image configuration values.
                properties:
                  error:
                    description: Error response to GetFunctionConfiguration.
                    properties:
                      errorCode:
                        type: string
                      message:
                        type: string
                    type: object
                  imageConfig:
                    description: |-
                      Configuration values that override the container image Dockerfile settings.
                      For more information, see Container image settings (https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms).
                    properties:
                      command:
                        items:
                          type: string
                        type: array
                      entryPoint:
                        items:
                          type: string
                        type: array
                      workingDirectory:
                        type: string
                    type: object
                type: object
              lastModified:
                description: |-
                  The date and time that the function was last updated, in ISO-8601 format
                  (https://www.w3.org/TR/NOTE-datetime) (YYYY-MM-DDThh:mm:ss.sTZD).
                type: string
              lastUpdateStatus:
                description: |-
                  The status of the last update that was performed on the function. This is
                  first set to Successful after function creation completes.
                type: string
              lastUpdateStatusReason:
                description: The reason for the last update that was performed on
                  the function.
                type: string
              lastUpdateStatusReasonCode:
                description: The reason code for the last update that was performed
                  on the function.
                type: string
              layerStatuses:
                description: The function's layers (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).
                items:
                  description: An Lambda layer (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).
                  properties:
                    arn:
                      type: string
                    codeSize:
                      format: int64
                      type: integer
                    signingJobARN:
                      type: string
                    signingProfileVersionARN:
                      type: string
                  type: object
                type: array
              masterARN:
                description: For Lambda@Edge functions, the ARN of the main function.
                type: string
              revisionID:
                description: The latest updated revision of the function or alias.
                type: string
              signingJobARN:
                description: The ARN of the signing job.
                type: string
              signingProfileVersionARN:
                description: The ARN of the signing profile version.
                type: string
              state:
                description: |-
                  The current state of the function. When the state is Inactive, you can reactivate
                  the function by invoking it.
                type: string
              stateReason:
                description: The reason for the function's current state.
                type: string
              stateReasonCode:
                description: |-
                  The reason code for the function's current state. When the code is Creating,
                  you can't invoke or modify the function.
                type: string
              version:
                description: The version of the Lambda function.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
